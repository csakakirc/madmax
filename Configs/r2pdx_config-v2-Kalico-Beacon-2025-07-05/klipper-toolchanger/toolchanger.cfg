[toolchanger]
t_command_restore_axis: XYZ
params_safe_toolhead_y: 110  # safe motion while toolhead is present
params_safe_shuttle_y: 35  # safe motion with no toolhead present
params_close_y: 15   # Y position right before the magnets start to grab
params_attach_y: -7   # Y position matching the large opening of the slots
#params_park_z: 237   # Z position when the screws are at the bottom of the slots
params_fast_speed: 16000 # Go as fast as we can # Was 30000
params_path_speed: 3000 # Was 1500

# Default shaper params
params_input_shaper_freq_x: 117.8
params_input_shaper_freq_y: 80.2
initialize_on: manual
initialize_gcode:
  _INITIALIZE_FROM_DETECTED_TOOL

before_change_gcode:
  {% set tn = "T"+(tool.tool_number|string) %}
  {% if printer["gcode_macro " + tn ] %}
     SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
  {% endif %}

after_change_gcode:
  {% set tn = "T"+(tool.tool_number|string) %}
  {% if printer["gcode_macro " + tn ] %}
     SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="'086c90'"
  {% endif %}
  {% if tool.params_input_shaper_freq_x %}
    SET_INPUT_SHAPER SHAPER_TYPE_X={tool.params_input_shaper_type_x} SHAPER_FREQ_X={tool.params_input_shaper_freq_x}
    SET_INPUT_SHAPER SHAPER_TYPE_Y={tool.params_input_shaper_type_y} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
  {% endif %}

dropoff_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set fast = tool.params_fast_speed|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set cur_z = printer.toolhead.position[2]|float %}
  RESPOND TYPE=echo MSG='Dropping off {tool.name}'
  # Pause the crash detection
  STOP_TOOL_PROBE_CRASH_DETECTION
  G90
  ; Move 1 mm up to avoid crashing into things
  G0 Z{ [cur_z+1.0, max_z]|min } F{fast}
  #   ##############  Move up to the dock  ##############
  #   G0 X{detach_x} Y{tool.params_safe_toolhead_y} Z{tool.params_park_z} F{fast}
  G0 X{detach_x} Y{tool.params_safe_toolhead_y} F{fast}
  G0 Y{tool.params_attach_y} F{fast}
  #  ############## Run the path ##############
  G0 X{park_x} F{tool.params_path_speed}
  G0 Y{tool.params_close_y} F{tool.params_path_speed}
  G0 Y{tool.params_safe_shuttle_y} F{fast}
  G90

pickup_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set fast = tool.params_fast_speed|float %}
  
  RESPOND TYPE=echo MSG='Picking up {tool.name}'
  RESPOND TYPE=echo MSG='Extruder is {tool.extruder}'
  RESPOND TYPE=echo MSG='{printer[tool.extruder]}'
  G90
  #   ##############  Fast to the last point  ##############
  G0 Y{tool.params_safe_shuttle_y} F{fast}
  #   ##############  Move up to the dock  ##############
  #   G0 X{park_x} Z{tool.params_park_z} F{fast}
  G0 X{park_x} F{fast}
  G0 Y{tool.params_close_y} F{fast}
  # Wait for temp before actually picking up the tool, while the nozzle is resting on it's pad.
  {% if tool.extruder %}
    M104 T{tool.tool_number} S{printer[tool.extruder].target|int}
    _WAIT_FOR_TEMP_WITHIN_TOLERANCE HEATER={tool.extruder} TOLERANCE=3
  {% endif %}
  #  ############## Run the path ##############
  G0 Y{tool.params_attach_y} F{tool.params_path_speed}
  G0 X{detach_x} F{tool.params_path_speed}
  G0 Y{tool.params_safe_toolhead_y} F{fast}
  # Enable tool crash detection
  #START_TOOL_PROBE_CRASH_DETECTION T={tool.tool_number}
  
  {% if 'Z' in restore_position %}
    G0 Z{restore_position.Z|float + 1 } F{fast}
  {% endif %}
  {% if 'X' in restore_position %}
    G0 X{restore_position.X} F{fast}
  {% endif %}
  {% if 'Y' in restore_position %}
    G0 Y{restore_position.Y} F{fast}
  {% endif %}
  {% if 'Z' in restore_position %}
    G0 Z{restore_position.Z} F{fast}
  {% endif %}
  G90

#####################################################################
#   These macros are specific for Beacon/Cartographer, uses gcode_buttons
#####################################################################

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
    {% for i in range(printer.toolchanger.tool_numbers|length|int) %}
      {% if printer["gcode_button tool" + i|string + "_detect"].state == "RELEASED" %}
        RESPOND MSG="Tool {i} found on the carriage."
        _INIT_MACRO_BECAUSE_RECURSIVE_ERROR T={i}
      {% endif %}
    {% endfor %}

[gcode_macro _INIT_MACRO_BECAUSE_RECURSIVE_ERROR]
gcode:
    INITIALIZE_TOOLCHANGER T={params.T}







