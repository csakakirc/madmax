## Mainsail Settings
[include mainsail.cfg]

## Other included files
[include macros.cfg]

[include klipper-toolchanger/homing_override.cfg]
[include klipper-toolchanger/offset_adjust_macros.cfg]
[include klipper-toolchanger/tc_offset_calibration_macros.cfg]
[include klipper-toolchanger/stealthburner_macros_tc.cfg]
#[include klipper-toolchanger/tool_detection.cfg]
[include klipper-toolchanger/toolboard_0.cfg]
[include klipper-toolchanger/toolboard_1.cfg]
[include klipper-toolchanger/toolchanger_macros.cfg]
[include klipper-toolchanger/toolchanger.cfg]

## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

[mcu]
##  MCU for X/Y/E steppers main MCU
##  [X in X] - B Motor
##  [Y in Y] - A Motor
##  Case Lighting
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_16600014C09869AF55E3405EC22000F5-if00
##--------------------------------------------------------------------

[mcu z]
##  MCU for Z steppers
##  [Z in X] - Front Left
##  [Z1 in Y] - Rear Left
##  [Z2 in Z] - Rear Right
##  [Z3 in E0]- Front Right
##  Bed Heater
##  Bed Thermistor
##  Z Endstop
##  Controller Fan
##  Display
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_1CD0FF16C09869AFAEEE405EC22000F5-if00
##--------------------------------------------------------------------

# [mcu EBBCan]
## MCU For toolhead
## Extruder
## X and Y endstops
## Probe
## Part and Hotend fans
## Heater and Thermistor
## RGB For Stealthburner
##--------------------------------------------------------------------
#canbus_uuid: fa7ae520df7c
##--------------------------------------------------------------------

#Recommended shaper_type_y = zv, shaper_freq_y = 35.8 Hz
#To avoid too much smoothing with 'zv', suggested max_accel <= 4900 mm/sec^2
#Recommended shaper_type_x = mzv, shaper_freq_x = 44.2 Hz
#To avoid too much smoothing with 'mzv', suggested max_accel <= 5800 mm/sec^2

[printer]
kinematics: corexy
max_velocity: 600  
max_accel: 8000
max_z_velocity: 200
max_z_accel: 2000
square_corner_velocity: 5.0

[idle_timeout]
timeout: 3600

[exclude_object]

[input_shaper]

[resonance_tester]
accel_chip: adxl345 toolboard_0
probe_points: 220, 225, 90
#max_smoothing:
#   Maximum input shaper smoothing to allow for each axis during shaper
#   auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
#   maximum smoothing is specified. Refer to Measuring_Resonances guide
#   for more details on using this feature.
#move_speed: 50
#   The speed (in mm/s) to move the toolhead to and between test points
#   during the calibration. The default is 50.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
accel_per_hz: 100
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).
sweeping_accel: 400
#   An acceleration of slow sweeping moves. The default is 400 mm/sec^2.
#sweeping_period: 1.2
#   A period of slow sweeping moves. Setting this parameter to 0
#   disables slow sweeping moves. Avoid setting it to a too small
#   non-zero value in order to not poison the measurements.
#   The default is 1.2 sec which is a good all-round choice.
sweeping_period: 0

[force_move]
enable_force_move: true

[save_variables]
filename: ~/printer_data/config/klipper-toolchanger/offset_save_file.cfg

[respond]

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
##  Connected to X on mcu_xye (B Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
#endstop_pin: tmc2209_stepper_x:virtual_endstop
endstop_pin: z:P1.29
position_min: 0
##--------------------------------------------------------------------
position_endstop: 440
position_max: 440
##--------------------------------------------------------------------
homing_speed: 50   #Max 100
homing_retract_dist: 10
second_homing_speed: 5

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: False
run_current: 0.9
sense_resistor: 0.110
#stealthchop_threshold: 0
#diag_pin: P1.29 # use the same pin that was previously the endstop_pin!
#driver_SGTHRS: 100

[stepper_y]
##  Connected to Y on mcu_xye (A Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
#endstop_pin: tmc2209_stepper_y:virtual_endstop
endstop_pin: z:P1.28
position_min: -10
##--------------------------------------------------------------------
position_endstop: 450
position_max: 450
##--------------------------------------------------------------------
homing_speed: 50 #Max 100
homing_retract_dist: 10
second_homing_speed: 5

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: False
run_current: 0.9
sense_resistor: 0.110
#stealthchop_threshold: 0
#diag_pin: P1.28 # use the same pin that was previously the endstop_pin!
#driver_SGTHRS: 100
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
#position_endstop: -0.5

##--------------------------------------------------------------------
position_max: 450
##--------------------------------------------------------------------
position_min: -15
homing_speed: 10
#second_homing_speed: 3
homing_retract_dist: 0

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z MCU - In Y Position
##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z MCU - In Z Position
##  Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z MCU - In E0 Position
##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.10
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: z:P0.25
##  Adjust Max Power so your heater doesn't warp your bed
max_power: 1.0
min_temp: 0
max_temp: 120

pwm_cycle_time: 0.0167
control: pid
pid_kp: 54.880
pid_ki: 2.115
pid_kd: 356.037

#####################################################################
#   Temperature Sensors
#####################################################################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

#####################################################################
#   Fan Control
#####################################################################

[heater_fan controller_fan]
##  Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#####################################################################
#  Beacon
#####################################################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_AFF5B1694E5737374D202020FF0F1415-if00
is_non_critical: True # COMMENT THIS LINE IF USING STANDARD KLIPPER
x_offset: 0 # update with offset from nozzle on your machine
y_offset: -20 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2

default_probe_method: proximity # proximity|contact
contact_max_hotend_temperature: 180 # increase to enable hot contacting
contact_sensitivity: 0
# Adjusts noise tolerance of contact processing. Values 0-3 are valid, with 3 tolerating the most noise.
contact_latency_min: 0
# Limits how low of a latency contact is allowed to advance.

# Contact settings.
home_method: contact # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home
home_xy_position: 220, 225 # update with your safe position
home_z_hop: 5
home_z_hop_speed: 100
home_xy_move_speed: 300

##  Macro calls for pre amd post homing with Beacon
home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
# Enables a gcode macro before homing the x axis
#home_gcode_post_x: _HOME_POST_AXIS AXIS=X
# Enables a gcode macro after homing the x axis
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
# Enables a gcode macro before homing the y axis
#home_gcode_post_y: _HOME_POST_AXIS AXIS=Y
# Enables a gcode macro after homing the y axis
#contact_activate_gcode: _CONTACT_ACTIVATE
# Enables a gcode macro to be called before contact is activated
#contact_deactivate_gcode: _CONTACT_DEACTIVATE
# Enables a gcode macro to be called after contact is deactivated

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
#--------------------------------------------------------------------

gantry_corners:
   -60,-10
   510,520
##  Probe points
points:
   50,110
   50,400
   400,400
   400,110

#--------------------------------------------------------------------
speed: 300
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 20

#####################################################################
#   Bed Mesh
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 20, 55
mesh_max: 415, 400
probe_count: 5,5
algorithm: bicubic
fade_start: 0.6
fade_end: 10.0
zero_reference_position: 225, 225
adaptive_margin: 5

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.6064052974657308,
#*# 	  1.9292978390803859,
#*# 	  0.7441070773970978,
#*# 	  0.31981772360083655,
#*# 	  0.22716579414787946,
#*# 	  0.21853780889546853,
#*# 	  -0.09996012260280374,
#*# 	  -0.19043202999939857,
#*# 	  0.12376087531191676,
#*# 	  0.12765385264607987
#*# model_domain = 3.2782214996636236e-07,3.34188477245199e-07
#*# model_range = 0.000000,5.000000
#*# model_temp = 31.048219
#*# model_offset = 0.20000
